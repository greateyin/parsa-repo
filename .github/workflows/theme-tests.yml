name: Hugo Theme Testing Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: '0.147.2'
        extended: true

    - name: Install theme dependencies
      run: npm install

    - name: Install test dependencies
      run: |
        cd tests
        npm install

    - name: Install Playwright browsers
      run: |
        cd tests
        npx playwright install --with-deps

    - name: Build example site
      run: |
        cd exampleSite
        hugo --minify

    - name: Start Hugo server (background)
      run: |
        cd exampleSite
        hugo server --port 1313 --disableFastRender &
        sleep 10

    - name: Run Hugo template tests
      run: npm run test:hugo

    - name: Run performance tests
      run: npm run test:performance

    - name: Run accessibility tests
      run: npm run test:accessibility

    - name: Run cross-browser tests
      run: npm run test:cross-browser

    - name: Generate visual regression references (first run)
      run: npm run test:reference
      continue-on-error: true

    - name: Run visual regression tests
      run: npm run test:visual
      continue-on-error: true

    - name: Upload test reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-reports-node-${{ matrix.node-version }}
        path: |
          tests/reports/
          tests/backstop_data/html_report/
        retention-days: 30

    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-node-${{ matrix.node-version }}
        path: tests/reports/playwright-report/
        retention-days: 30

    - name: Comment PR with test results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = './tests/reports/test-summary.json';
          
          if (fs.existsSync(path)) {
            const summary = JSON.parse(fs.readFileSync(path, 'utf8'));
            const overallResult = summary.overallResult ? '✅ PASSED' : '❌ FAILED';
            
            let comment = `## 🧪 Test Results - Node.js ${{ matrix.node-version }}\n\n`;
            comment += `**Overall Result:** ${overallResult}\n\n`;
            comment += `### Test Suite Results\n\n`;
            
            Object.entries(summary.testSuites).forEach(([key, suite]) => {
              const status = suite.passed ? '✅' : '❌';
              comment += `- ${status} **${suite.name}**\n`;
            });
            
            comment += `\n📊 [View detailed reports in artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }

  lighthouse:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'

    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: '0.147.2'
        extended: true

    - name: Install dependencies
      run: |
        npm install
        cd tests && npm install

    - name: Build and serve site
      run: |
        cd exampleSite
        hugo --minify
        hugo server --port 1313 --disableFastRender &
        sleep 10

    - name: Run Lighthouse CI
      run: |
        cd tests
        npx lighthouse-ci autorun

    - name: Upload Lighthouse reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lighthouse-reports
        path: tests/reports/lighthouse/
        retention-days: 30